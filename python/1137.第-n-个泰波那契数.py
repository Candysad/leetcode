#
# @lc app=leetcode.cn id=1137 lang=python3
#
# [1137] 第 N 个泰波那契数
#

# @lc code=start
class Solution:
    def tribonacci(self, n: int) -> int:
        '''
        动态+节约数组
        '''
        # t = [0, 1, 1]
        
        # for i in range(3, n+1):
        #     t[i%3] = t[0] + t[1] + t[2]
        # return t[n%3]
        
        '''
        暴力
        '''
        t = [0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149, 274, 504, 927, 1705, 3136, 5768, 10609, 19513, 35890, 66012, 121415, 223317, 410744, 755476, 1389537, 2555757, 4700770, 8646064, 15902591, 29249425, 53798080, 98950096, 181997601, 334745777, 615693474, 1132436852, 2082876103]
        return t[n]
# @lc code=end

